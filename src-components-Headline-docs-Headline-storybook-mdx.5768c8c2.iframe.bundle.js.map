{"version":3,"file":"src-components-Headline-docs-Headline-storybook-mdx.5768c8c2.iframe.bundle.js","mappings":";;AA6DA;AACA;AACA;;;AAGA;AACA;;;ACvDA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA","sources":["webpack://@freenow/wave/./src/components/Headline/Headline.tsx","webpack://@freenow/wave/./docs/components/ItemWrapper.ts"],"sourcesContent":["import * as React from 'react';\nimport { ComponentPropsWithoutRef } from 'react';\nimport styled from 'styled-components';\nimport { compose, margin, system, MarginProps, textAlign, TextAlignProps, ResponsiveValue } from 'styled-system';\nimport { Colors } from '../../essentials';\nimport { theme } from '../../essentials/theme';\nimport { get } from '../../utils/themeGet';\n\ninterface HeadlineProps extends ComponentPropsWithoutRef<'h1'>, MarginProps, TextAlignProps {\n    /**\n     * Adjust color for display on a dark background\n     */\n    inverted?: boolean;\n    /**\n     * Set the html tag for the headline including the appropriate styles\n     */\n    as?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\n    /**\n     * Set the style of the headline\n     */\n    size?: ResponsiveValue<'xxl' | 'xl' | 'l' | 'm' | 's' | 'xs'>;\n}\n\nexport const DEFAULT_HEADLINE_SIZE = {\n    h1: 'xxl',\n    h2: 'xl',\n    h3: 'l',\n    h4: 'm',\n    h5: 's',\n    h6: 'xs'\n} as const;\n\nconst parser = system({\n    fontSize: {\n        property: 'fontSize',\n        defaultScale: {\n            xs: '0.75rem',\n            s: '0.875rem',\n            m: '1rem',\n            l: '1.5rem',\n            xl: '2rem',\n            xxl: '3rem'\n        }\n    },\n    lh: {\n        property: 'lineHeight',\n        defaultScale: {\n            xs: '1.125rem',\n            s: '1.25rem',\n            m: '1.375rem',\n            l: '2rem',\n            xl: '2.5rem',\n            xxl: '3.75rem'\n        }\n    }\n});\n\nconst getSize = ({ as = 'h1', size }: HeadlineProps): ResponsiveValue<'xxl' | 'xl' | 'l' | 'm' | 's' | 'xs'> =>\n    size || DEFAULT_HEADLINE_SIZE[as];\n\nconst Headline: React.FC<HeadlineProps> = styled.h1.attrs({ theme })<HeadlineProps>`\n    color: ${p => (p.inverted ? Colors.WHITE : Colors.AUTHENTIC_BLUE_900)};\n    font-family: ${get('fonts.normal')};\n    font-weight: ${get('fontWeights.bold')};\n    margin: 0;\n\n    ${props => parser({ fontSize: getSize(props), lh: getSize(props), ...props })}\n    ${compose(margin, textAlign)}\n`;\n\nexport { Headline, HeadlineProps };\n","import styled from 'styled-components';\nimport { compose, margin, MarginProps, padding, PaddingProps } from 'styled-system';\nimport { Colors, Spaces } from '../../src/essentials';\n\ntype ItemWrapperProps = PaddingProps &\n    MarginProps & {\n        inverted?: boolean;\n        gridTemplate: string;\n    };\n\nconst ItemWrapper = styled.div<ItemWrapperProps>`\n    align-items: end;\n    padding: ${Spaces[2]} ${Spaces[4]};\n    margin-left: -${Spaces[4]};\n    margin-right: -${Spaces[4]};\n    display: grid;\n    grid-template-columns: ${p => (p.gridTemplate ? p.gridTemplate : '1fr')};\n    grid-row-gap: ${Spaces[3]};\n    grid-column-gap: ${Spaces[2]};\n    background-color: ${p => (p.inverted ? Colors.AUTHENTIC_BLUE_900 : Colors.WHITE)};\n\n    ${compose(padding, margin)}\n`;\n\nexport { ItemWrapper };\n"],"names":[],"sourceRoot":""}